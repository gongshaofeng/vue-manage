{"remainingRequest":"/Users/GSF/GSF/vue-manage-first/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/GSF/GSF/vue-manage-first/src/components/page/shopList.vue?vue&type=style&index=0&sc=true&lang=css","dependencies":[{"path":"/Users/GSF/GSF/vue-manage-first/src/components/page/shopList.vue","mtime":1537331260876},{"path":"/Users/GSF/GSF/vue-manage-first/node_modules/css-loader/index.js","mtime":1537186378000},{"path":"/Users/GSF/GSF/vue-manage-first/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1537186378000},{"path":"/Users/GSF/GSF/vue-manage-first/node_modules/postcss-loader/lib/index.js","mtime":1537186378000},{"path":"/Users/GSF/GSF/vue-manage-first/node_modules/cache-loader/dist/cjs.js","mtime":1537186378000},{"path":"/Users/GSF/GSF/vue-manage-first/node_modules/vue-loader/lib/index.js","mtime":1537186378000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.demo-table-expand {\n    font-size: 0;\n}\n.demo-table-expand label {\n    width: 90px;\n    color: #99a9bf;\n}\n.demo-table-expand .el-form-item {\n    margin-right: 0;\n    margin-bottom: 0;\n    width: 50%;\n}\n.table_container{\n    padding: 20px;\n}\n.Pagination{\n    display: flex;\n    justify-content: flex-start;\n    margin-top: 8px;\n}\n.avatar-uploader .el-upload {\n    border: 1px dashed #d9d9d9;\n    border-radius: 6px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n    border-color: #20a0ff;\n}\n.avatar-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    width: 120px;\n    height: 120px;\n    line-height: 120px;\n    text-align: center;\n}\n.avatar {\n    width: 120px;\n    height: 120px;\n    display: block;\n}\n",{"version":3,"sources":["shopList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"shopList.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div class=\"fillcontain\">\n        <head-top></head-top>\n        <div class=\"table_container\">\n            <el-table\n                :data=\"tableData\"\n                style=\"width: 100%\">\n                <el-table-column type=\"expand\">\n                  <template slot-scope=\"props\">\n                    <el-form label-position=\"left\" inline class=\"demo-table-expand\">\n                      <el-form-item label=\"店铺名称\">\n                        <span>{{ props.row.name }}</span>\n                      </el-form-item>\n                      <el-form-item label=\"店铺地址\">\n                        <span>{{ props.row.address }}</span>\n                      </el-form-item>\n                      <el-form-item label=\"店铺介绍\">\n                        <span>{{ props.row.description }}</span>\n                      </el-form-item>\n                      <el-form-item label=\"店铺 ID\">\n                        <span>{{ props.row.id }}</span>\n                      </el-form-item>\n                      <el-form-item label=\"联系电话\">\n                        <span>{{ props.row.phone }}</span>\n                      </el-form-item>\n                      <el-form-item label=\"评分\">\n                        <span>{{ props.row.rating }}</span>\n                      </el-form-item>\n                      <el-form-item label=\"销售量\">\n                        <span>{{ props.row.recent_order_num }}</span>\n                      </el-form-item>\n                      <el-form-item label=\"分类\">\n                        <span>{{ props.row.category }}</span>\n                      </el-form-item>\n                    </el-form>\n                  </template>\n                </el-table-column>\n                <el-table-column\n                  label=\"店铺名称\"\n                  prop=\"name\">\n                </el-table-column>\n                <el-table-column\n                  label=\"店铺地址\"\n                  prop=\"address\">\n                </el-table-column>\n                <el-table-column\n                  label=\"店铺介绍\"\n                  prop=\"description\">\n                </el-table-column>\n                <el-table-column label=\"操作\" width=\"200\">\n                  <template slot-scope=\"scope\">\n                    <el-button\n                      size=\"mini\"\n                      @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n                    <el-button\n                      size=\"mini\"\n                      type=\"Success\"\n                      @click=\"addFood(scope.$index, scope.row)\">添加食品</el-button>\n                    <el-button\n                      size=\"mini\"\n                      type=\"danger\"\n                      @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\n                  </template>\n                </el-table-column>\n            </el-table>\n            <div class=\"Pagination\">\n                <el-pagination\n                  @size-change=\"handleSizeChange\"\n                  @current-change=\"handleCurrentChange\"\n                  :current-page=\"currentPage\"\n                  :page-size=\"20\"\n                  layout=\"total, prev, pager, next\"\n                  :total=\"count\">\n                </el-pagination>\n            </div>\n            <el-dialog title=\"修改店铺信息\" v-model=\"dialogFormVisible\">\n                <el-form :model=\"selectTable\">\n                    <el-form-item label=\"店铺名称\" label-width=\"100px\">\n                        <el-input v-model=\"selectTable.name\" auto-complete=\"off\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"详细地址\" label-width=\"100px\">\n                        <el-autocomplete\n                          v-model=\"address.address\"\n                          :fetch-suggestions=\"querySearchAsync\"\n                          placeholder=\"请输入地址\"\n                          style=\"width: 100%;\"\n                          @select=\"addressSelect\"\n                        ></el-autocomplete>\n                        <span>当前城市：{{city.name}}</span>\n                    </el-form-item>\n                    <el-form-item label=\"店铺介绍\" label-width=\"100px\">\n                        <el-input v-model=\"selectTable.description\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"联系电话\" label-width=\"100px\">\n                        <el-input v-model=\"selectTable.phone\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"店铺分类\" label-width=\"100px\">\n                        <el-cascader\n                          :options=\"categoryOptions\"\n                          v-model=\"selectedCategory\"\n                          change-on-select\n                        ></el-cascader>\n                    </el-form-item>\n                    <el-form-item label=\"商铺图片\" label-width=\"100px\">\n                        <el-upload\n                          class=\"avatar-uploader\"\n                          :action=\"baseUrl + '/v1/addimg/shop'\"\n                          :show-file-list=\"false\"\n                          :on-success=\"handleServiceAvatarScucess\"\n                          :before-upload=\"beforeAvatarUpload\">\n                          <img v-if=\"selectTable.image_path\" :src=\"baseImgPath + selectTable.image_path\" class=\"avatar\">\n                          <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n                        </el-upload>\n                    </el-form-item>\n                </el-form>\n              <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"updateShop\">确 定</el-button>\n              </div>\n            </el-dialog>\n        </div>\n    </div>\n</template>\n\n<script>\n    import headTop from '../components/headTop'\n    import {baseUrl, baseImgPath} from '@/config/env'\n    import {cityGuess, getResturants, getResturantsCount, foodCategory, updateResturant, searchplace, deleteResturant} from '@/api/getData'\n    export default {\n        data(){\n            return {\n                baseUrl,\n                baseImgPath,\n                city: {},\n                offset: 0,\n                limit: 20,\n                count: 0,\n                tableData: [],\n                currentPage: 1,\n                selectTable: {},\n                dialogFormVisible: true,\n                categoryOptions: [],\n                selectedCategory: [],\n                address: {},\n            }\n        },\n        created(){\n            this.initData();\n\n        },\n    \tcomponents: {\n    \t\theadTop,\n    \t},\n        methods: {\n            async initData(){\n                try{\n                    this.city = await cityGuess();\n                    const countData = await getResturantsCount();\n                    if (countData.status == 1) {\n                        this.count = countData.count;\n                    }else{\n                        throw new Error('获取数据失败');\n                    }\n                    this.getResturants();\n                }catch(err){\n                    console.log('获取数据失败', err);\n                }\n            },\n            async getCategory(){\n                try{\n                    const categories = await foodCategory();\n                    categories.forEach(item => {\n                        if (item.sub_categories.length) {\n                            const addnew = {\n                                value: item.name,\n                                label: item.name,\n                                children: []\n                            }\n                            item.sub_categories.forEach((subitem, index) => {\n                                if (index == 0) {\n                                    return\n                                }\n                                addnew.children.push({\n                                    value: subitem.name,\n                                    label: subitem.name,\n                                })\n                            })\n                            this.categoryOptions.push(addnew)\n                        }\n                    })\n                }catch(err){\n                    console.log('获取商铺种类失败', err);\n                }\n            },\n            async getResturants(){\n                const {latitude, longitude} = this.city;\n                const restaurants = await getResturants({latitude, longitude, offset: this.offset, limit: this.limit});\n                this.tableData = [];\n                restaurants.forEach(item => {\n                    const tableData = {};\n                    tableData.name = item.name;\n                    tableData.address = item.address;\n                    tableData.description = item.description;\n                    tableData.id = item.id;\n                    tableData.phone = item.phone;\n                    tableData.rating = item.rating;\n                    tableData.recent_order_num = item.recent_order_num;\n                    tableData.category = item.category;\n                    tableData.image_path = item.image_path;\n                    this.tableData.push(tableData);\n                })\n            },\n            handleSizeChange(val) {\n                console.log(`每页 ${val} 条`);\n            },\n            handleCurrentChange(val) {\n                this.currentPage = val;\n                this.offset = (val - 1)*this.limit;\n                this.getResturants()\n            },\n            handleEdit(index, row) {\n                this.selectTable = row;\n                this.address.address = row.address;\n                this.dialogFormVisible = true;\n                this.selectedCategory = row.category.split('/');\n                if (!this.categoryOptions.length) {\n                    this.getCategory();\n                }\n            },\n            addFood(index, row){\n                this.$router.push({ path: 'addGoods', query: { restaurant_id: row.id }})\n            },\n            async handleDelete(index, row) {\n                try{\n                    const res = await deleteResturant(row.id);\n                    if (res.status == 1) {\n                        this.$message({\n                            type: 'success',\n                            message: '删除店铺成功'\n                        });\n                        this.tableData.splice(index, 1);\n                    }else{\n                        throw new Error(res.message)\n                    }\n                }catch(err){\n                    this.$message({\n                        type: 'error',\n                        message: err.message\n                    });\n                    console.log('删除店铺失败')\n                }\n            },\n            async querySearchAsync(queryString, cb) {\n                if (queryString) {\n                    try{\n                        const cityList = await searchplace(this.city.id, queryString);\n                        if (cityList instanceof Array) {\n                            cityList.map(item => {\n                                item.value = item.address;\n                                return item;\n                            })\n                            cb(cityList)\n                        }\n                    }catch(err){\n                        console.log(err)\n                    }\n                }\n            },\n            addressSelect(vale){\n                const {address, latitude, longitude} = vale;\n                this.address = {address, latitude, longitude};\n            },\n            handleServiceAvatarScucess(res, file) {\n                if (res.status == 1) {\n                    this.selectTable.image_path = res.image_path;\n                }else{\n                    this.$message.error('上传图片失败！');\n                }\n            },\n            beforeAvatarUpload(file) {\n                const isRightType = (file.type === 'image/jpeg') || (file.type === 'image/png');\n                const isLt2M = file.size / 1024 / 1024 < 2;\n\n                if (!isRightType) {\n                    this.$message.error('上传头像图片只能是 JPG 格式!');\n                }\n                if (!isLt2M) {\n                    this.$message.error('上传头像图片大小不能超过 2MB!');\n                }\n                return isRightType && isLt2M;\n            },\n            async updateShop(){\n                this.dialogFormVisible = false;\n                try{\n                    Object.assign(this.selectTable, this.address);\n                    this.selectTable.category = this.selectedCategory.join('/');\n                    const res = await updateResturant(this.selectTable)\n                    if (res.status == 1) {\n                        this.$message({\n                            type: 'success',\n                            message: '更新店铺信息成功'\n                        });\n                        this.getResturants();\n                    }else{\n                        this.$message({\n                            type: 'error',\n                            message: res.message\n                        });\n                    }\n                }catch(err){\n                    console.log('更新餐馆信息失败', err);\n                }\n            },\n        },\n    }\n</script>\n\n<style sc>\n    .demo-table-expand {\n        font-size: 0;\n    }\n    .demo-table-expand label {\n        width: 90px;\n        color: #99a9bf;\n    }\n    .demo-table-expand .el-form-item {\n        margin-right: 0;\n        margin-bottom: 0;\n        width: 50%;\n    }\n    .table_container{\n        padding: 20px;\n    }\n    .Pagination{\n        display: flex;\n        justify-content: flex-start;\n        margin-top: 8px;\n    }\n    .avatar-uploader .el-upload {\n        border: 1px dashed #d9d9d9;\n        border-radius: 6px;\n        cursor: pointer;\n        position: relative;\n        overflow: hidden;\n    }\n    .avatar-uploader .el-upload:hover {\n        border-color: #20a0ff;\n    }\n    .avatar-uploader-icon {\n        font-size: 28px;\n        color: #8c939d;\n        width: 120px;\n        height: 120px;\n        line-height: 120px;\n        text-align: center;\n    }\n    .avatar {\n        width: 120px;\n        height: 120px;\n        display: block;\n    }\n</style>\n"]}]}