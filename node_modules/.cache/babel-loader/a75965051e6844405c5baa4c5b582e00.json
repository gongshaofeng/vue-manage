{"remainingRequest":"/Users/GSF/Desktop/vue-manage/node_modules/babel-loader/lib/index.js!/Users/GSF/Desktop/vue-manage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/GSF/Desktop/vue-manage/src/components/common/Home.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/GSF/Desktop/vue-manage/src/components/common/Home.vue","mtime":1536735193296},{"path":"/Users/GSF/Desktop/vue-manage/node_modules/cache-loader/dist/cjs.js","mtime":1534853418000},{"path":"/Users/GSF/Desktop/vue-manage/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/GSF/Desktop/vue-manage/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 引入子组件\nimport vHeader from './Header.vue';\nimport vSidebar from './Sidebar.vue';\nimport vTags from './Tags.vue';\nimport bus from './bus';\nexport default {\n  data: function data() {\n    return {\n      tagsList: [],\n      // 控制选项卡隐藏\n      collapse: false\n    };\n  },\n  // 注册子组件\n  components: {\n    vHeader: vHeader,\n    vSidebar: vSidebar,\n    vTags: vTags\n  },\n  created: function created() {\n    var _this = this;\n\n    // 存入bus，指向Header.vue\n    bus.$on('collapse', function (msg) {\n      _this.collapse = msg; // console.log(this.collapse)\n    }); //只有在标签页列表里的页面才使用keep-alive，即关闭标签之后就不保存到内存中了\n\n    bus.$on('tags', function (msg) {\n      var arr = [];\n\n      for (var i = 0; i < msg.length; i++) {\n        msg[i].name && arr.push(msg[i].name); // console.log(msg[i])\n      } // console.log(arr)\n\n\n      _this.tagsList = arr; // console.log(this.tagsList)\n    });\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA,OAAA,OAAA,MAAA,cAAA;AACA,OAAA,QAAA,MAAA,eAAA;AACA,OAAA,KAAA,MAAA,YAAA;AACA,OAAA,GAAA,MAAA,OAAA;AAEA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,gBAAA,EADA;AAEA;AACA,gBAAA;AAHA,KAAA;AAKA,GAPA;AAQA;AACA,cAAA;AACA,oBADA;AACA,sBADA;AACA;AADA,GATA;AAYA,SAZA,qBAYA;AAAA;;AACA;AACA,QAAA,GAAA,CAAA,UAAA,EAAA,eAAA;AACA,YAAA,QAAA,GAAA,GAAA,CADA,CAEA;AACA,KAHA,EAFA,CAMA;;AACA,QAAA,GAAA,CAAA,MAAA,EAAA,eAAA;AACA,UAAA,MAAA,EAAA;;AACA,WAAA,IAAA,IAAA,CAAA,EAAA,IAAA,IAAA,MAAA,EAAA,GAAA,EAAA;AACA,YAAA,CAAA,EAAA,IAAA,IAAA,IAAA,IAAA,CAAA,IAAA,CAAA,EAAA,IAAA,CAAA,CADA,CAEA;AACA,OALA,CAMA;;;AACA,YAAA,QAAA,GAAA,GAAA,CAPA,CAQA;AAEA,KAVA;AAWA;AA9BA,CAAA","sourcesContent":["<template>\n    <div class=\"wrapper\">\n        <v-header></v-header>\n        <v-sidebar></v-sidebar>\n        <div class=\"content-box\" :class=\"{'content-collapse':collapse}\">\n            <v-tags></v-tags>\n            <div class=\"content\">\n                <transition name=\"move\" mode=\"out-in\">\n                    <!-- 切换路由后，需要调用钩子函数，实时更新数据，且必须被transition包含 -->\n                        <!-- 只有匹配的组件会被缓存 -->\n                    <keep-alive :include=\"tagsList\">\n                        <router-view></router-view>\n                    </keep-alive>\n                </transition>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n// 引入子组件\nimport vHeader from './Header.vue';\nimport vSidebar from './Sidebar.vue';\nimport vTags from './Tags.vue';\nimport bus from './bus'\n\nexport default {\n    data(){\n        return {\n            tagsList: [],\n            // 控制选项卡隐藏\n            collapse: false\n        }\n    },\n    // 注册子组件\n    components:{\n        vHeader,vSidebar,vTags\n    },\n    created(){\n        // 存入bus，指向Header.vue\n        bus.$on('collapse',msg =>{\n            this.collapse = msg\n            // console.log(this.collapse)\n        });\n        //只有在标签页列表里的页面才使用keep-alive，即关闭标签之后就不保存到内存中了\n        bus.$on('tags',msg =>{\n            let arr = [];\n            for(let i = 0 ; i < msg.length; i++){\n                msg[i].name && arr.push(msg[i].name);\n                // console.log(msg[i])\n            }\n            // console.log(arr)\n            this.tagsList = arr;\n            // console.log(this.tagsList)\n\n        })\n    }\n}\n</script>\n<style scoped>\n\n</style>\n\n"],"sourceRoot":"src/components/common"}]}