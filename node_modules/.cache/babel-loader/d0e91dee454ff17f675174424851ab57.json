{"remainingRequest":"/Users/GSF/GSF/vue-manage-first/node_modules/babel-loader/lib/index.js!/Users/GSF/GSF/vue-manage-first/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/GSF/GSF/vue-manage-first/src/components/page/shopList.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/GSF/GSF/vue-manage-first/src/components/page/shopList.vue","mtime":1537334560501},{"path":"/Users/GSF/GSF/vue-manage-first/node_modules/cache-loader/dist/cjs.js","mtime":1537186378000},{"path":"/Users/GSF/GSF/vue-manage-first/node_modules/babel-loader/lib/index.js","mtime":1537186378000},{"path":"/Users/GSF/GSF/vue-manage-first/node_modules/vue-loader/lib/index.js","mtime":1537186378000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/GSF/GSF/vue-manage-first/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'shoplist',\n  data: function data() {\n    return {\n      // baseUrl,\n      // baseImgPath,\n      city: {},\n      offset: 0,\n      limit: 20,\n      count: 0,\n      tableData: [],\n      currentPage: 1,\n      selectTable: {},\n      dialogFormVisible: false,\n      categoryOptions: [],\n      selectedCategory: [],\n      address: {}\n    };\n  },\n  created: function created() {\n    this.getshoplist();\n  },\n  methods: {\n    // 更新商家列表\n    updateShop: function () {\n      var _updateShop = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.dialogFormVisible = false;\n                _context.prev = 1;\n                Object.assign(this.selectTable, this.address);\n                this.selectTable.category = this.selectedCategory.join('/');\n                _context.next = 6;\n                return updateResturant(this.selectTable);\n\n              case 6:\n                res = _context.sent;\n\n                if (res.status == 1) {\n                  this.$message({\n                    type: 'success',\n                    message: '更新店铺信息成功'\n                  });\n                  this.getResturants();\n                } else {\n                  this.$message({\n                    type: 'error',\n                    message: res.message\n                  });\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                console.log('更新餐馆信息失败', _context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 10]]);\n      }));\n\n      return function updateShop() {\n        return _updateShop.apply(this, arguments);\n      };\n    }(),\n    // 图片上传服务\n    handleServiceAvatarScucess: function handleServiceAvatarScucess(res, file) {\n      if (res.status == 1) {\n        this.selectTable.image_path = res.image_path;\n      } else {\n        this.$message.error('上传图片失败！');\n      }\n    },\n    // 图片上传之前\n    beforeAvatarUpload: function beforeAvatarUpload(file) {\n      var isRightType = file.type === 'image/jpeg' || file.type === 'image/png';\n      var isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isRightType) {\n        this.$message.error('上传头像图片只能是 JPG 格式!');\n      }\n\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n\n      return isRightType && isLt2M;\n    },\n    // 地址选择:点击选中建议项时触发\n    addressSelect: function addressSelect(vale) {\n      var address = vale.address,\n          latitude = vale.latitude,\n          longitude = vale.longitude;\n      this.address = {\n        address: address,\n        latitude: latitude,\n        longitude: longitude\n      };\n    },\n    // 异步查询\n    querySearchAsync: function () {\n      var _querySearchAsync = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(queryString, cb) {\n        var cityList;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!queryString) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                _context2.prev = 1;\n                _context2.next = 4;\n                return searchplace(this.city.id, queryString);\n\n              case 4:\n                cityList = _context2.sent;\n\n                if (cityList instanceof Array) {\n                  cityList.map(function (item) {\n                    item.value = item.address;\n                    return item;\n                  });\n                  cb(cityList);\n                }\n\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 8]]);\n      }));\n\n      return function querySearchAsync(_x, _x2) {\n        return _querySearchAsync.apply(this, arguments);\n      };\n    }(),\n    handleSizeChange: function handleSizeChange(val) {\n      console.log(\"\\u6BCF\\u9875 \".concat(val, \" \\u6761\"));\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      console.log(1);\n    },\n    handleEdit: function handleEdit(index, row) {\n      this.dialogFormVisible = true;\n      console.log(index);\n    },\n    addFood: function addFood(index, row) {\n      console.log(index, row);\n    },\n    // 删除商家\n    handleDelete: function handleDelete(index, row) {\n      var _this = this;\n\n      this.$confirm(\"确认删除？\").then(function (result) {\n        var id = _this.tableData[index].id;\n\n        var q = _this.deleteResturnant(id);\n\n        if (q == false) {\n          _this.$message({\n            type: 'success',\n            message: '删除店铺成功'\n          });\n\n          _this.tableData.splice(index, 1); //通过下标删除页面上的数据\n\n        } else {\n          alert(\"失败\");\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    // 获取商家列表 api\n    getshoplist: function getshoplist() {\n      var _this2 = this;\n\n      this.$http.get(\"http://localhost:3000/shoplist\").then(function (res) {\n        // console.log(res.data);\n        _this2.tableData = res.data;\n      });\n    },\n    // 删除商家 api\n    deleteResturnant: function deleteResturnant(id) {\n      this.$axios({\n        method: \"delete\",\n        url: \"http://localhost:3000/shoplist/\".concat(id)\n      }).then(function (res) {// console.log(res)\n      }).catch(function (err) {\n        console.log(err);\n      });\n      return false;\n    }\n  }\n};",{"version":3,"sources":["shopList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA,eAAA;AACA,QAAA,UADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA;AACA;AACA,YAAA,EAHA;AAIA,cAAA,CAJA;AAKA,aAAA,EALA;AAMA,aAAA,CANA;AAOA,iBAAA,EAPA;AAQA,mBAAA,CARA;AASA,mBAAA,EATA;AAUA,yBAAA,KAVA;AAWA,uBAAA,EAXA;AAYA,wBAAA,EAZA;AAaA,eAAA;AAbA,KAAA;AAeA,GAlBA;AAmBA,SAnBA,qBAmBA;AACA,SAAA,WAAA;AACA,GArBA;AAsBA,WAAA;AACA;AACA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,qBAAA,iBAAA,GAAA,KAAA;AAHA;AAKA,uBAAA,MAAA,CAAA,KAAA,WAAA,EAAA,KAAA,OAAA;AACA,qBAAA,WAAA,CAAA,QAAA,GAAA,KAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AANA;AAAA,uBAOA,gBAAA,KAAA,WAAA,CAPA;;AAAA;AAOA,mBAPA;;AAQA,oBAAA,IAAA,MAAA,IAAA,CAAA,EAAA;AACA,uBAAA,QAAA,CAAA;AACA,0BAAA,SADA;AAEA,6BAAA;AAFA,mBAAA;AAIA,uBAAA,aAAA;AACA,iBANA,MAMA;AACA,uBAAA,QAAA,CAAA;AACA,0BAAA,OADA;AAEA,6BAAA,IAAA;AAFA,mBAAA;AAIA;;AAnBA;AAAA;;AAAA;AAAA;AAAA;AAqBA,wBAAA,GAAA,CAAA,UAAA;;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAwBA;AACA,8BAzBA,sCAyBA,GAzBA,EAyBA,IAzBA,EAyBA;AACA,UAAA,IAAA,MAAA,IAAA,CAAA,EAAA;AACA,aAAA,WAAA,CAAA,UAAA,GAAA,IAAA,UAAA;AACA,OAFA,MAEA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,SAAA;AACA;AACA,KA/BA;AAgCA;AACA,sBAjCA,8BAiCA,IAjCA,EAiCA;AACA,UAAA,cAAA,KAAA,IAAA,KAAA,YAAA,IAAA,KAAA,IAAA,KAAA,WAAA;AACA,UAAA,SAAA,KAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,CAAA;;AAEA,UAAA,CAAA,WAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,mBAAA;AACA;;AACA,UAAA,CAAA,MAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,mBAAA;AACA;;AACA,aAAA,eAAA,MAAA;AACA,KA5CA;AA6CA;AACA,iBA9CA,yBA8CA,IA9CA,EA8CA;AAAA,UACA,OADA,GACA,IADA,CACA,OADA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAAA,UACA,SADA,GACA,IADA,CACA,SADA;AAEA,WAAA,OAAA,GAAA;AAAA,wBAAA;AAAA,0BAAA;AAAA;AAAA,OAAA;AACA,KAjDA;AAkDA;AACA,oBAnDA;AAAA;AAAA;AAAA,gDAmDA,WAnDA,EAmDA,EAnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAoDA,WApDA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAsDA,YAAA,KAAA,IAAA,CAAA,EAAA,EAAA,WAAA,CAtDA;;AAAA;AAsDA,wBAtDA;;AAuDA,oBAAA,oBAAA,KAAA,EAAA;AACA,2BAAA,GAAA,CAAA,gBAAA;AACA,yBAAA,KAAA,GAAA,KAAA,OAAA;AACA,2BAAA,IAAA;AACA,mBAHA;AAIA,qBAAA,QAAA;AACA;;AA7DA;AAAA;;AAAA;AAAA;AAAA;AA+DA,wBAAA,GAAA;;AA/DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAmEA,oBAnEA,4BAmEA,GAnEA,EAmEA;AACA,cAAA,GAAA,wBAAA,GAAA;AACA,KArEA;AAsEA,uBAtEA,+BAsEA,GAtEA,EAsEA;AACA,cAAA,GAAA,CAAA,CAAA;AACA,KAxEA;AAyEA,cAzEA,sBAyEA,KAzEA,EAyEA,GAzEA,EAyEA;AACA,WAAA,iBAAA,GAAA,IAAA;AACA,cAAA,GAAA,CAAA,KAAA;AACA,KA5EA;AA6EA,WA7EA,mBA6EA,KA7EA,EA6EA,GA7EA,EA6EA;AACA,cAAA,GAAA,CAAA,KAAA,EAAA,GAAA;AAEA,KAhFA;AAiFA;AACA,gBAlFA,wBAkFA,KAlFA,EAkFA,GAlFA,EAkFA;AAAA;;AACA,WAAA,QAAA,CAAA,OAAA,EACA,IADA,CACA,kBAAA;AACA,YAAA,KAAA,MAAA,SAAA,CAAA,KAAA,EAAA,EAAA;;AACA,YAAA,IAAA,MAAA,gBAAA,CAAA,EAAA,CAAA;;AACA,YAAA,KAAA,KAAA,EAAA;AACA,gBAAA,QAAA,CAAA;AACA,kBAAA,SADA;AAEA,qBAAA;AAFA,WAAA;;AAIA,gBAAA,SAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,EALA,CAKA;;AACA,SANA,MAMA;AACA,gBAAA,IAAA;AACA;AACA,OAbA,EAcA,KAdA,CAcA,eAAA;AAAA,gBAAA,GAAA,CAAA,GAAA;AAAA,OAdA;AAeA,KAlGA;AAmGA;AACA,eApGA,yBAoGA;AAAA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,gCAAA,EACA,IADA,CACA,eAAA;AACA;AACA,eAAA,SAAA,GAAA,IAAA,IAAA;AACA,OAJA;AAKA,KA1GA;AA2GA;AACA,oBA5GA,4BA4GA,EA5GA,EA4GA;AACA,WAAA,MAAA,CAAA;AACA,gBAAA,QADA;AAEA,sDAAA,EAAA;AAFA,OAAA,EAGA,IAHA,CAGA,eAAA,CACA;AACA,OALA,EAKA,KALA,CAKA,eAAA;AACA,gBAAA,GAAA,CAAA,GAAA;AACA,OAPA;AAQA,aAAA,KAAA;AACA;AAtHA;AAtBA,CAAA","sourcesContent":["<template>\n    <div class=\"table_contain\">\n        <el-table :data=\"tableData\" style=\"width: 100%\" :header-cell-style=\"{fontSize:'14px', color:'black'}\">\n            <el-table-column type=\"expand\">\n                <template slot-scope=\"props\">\n                    <el-form label-position=\"left\" inline class=\"demo-table-expand\">\n                        <el-form-item label=\"店铺名称\">\n                            <span>{{ props.row.name }}</span>\n                        </el-form-item>\n                        <el-form-item label=\"店铺地址\">\n                        <span>{{ props.row.address }}</span>\n                        </el-form-item>\n                        <el-form-item label=\"店铺介绍\">\n                            <span>{{ props.row.description }}</span>\n                        </el-form-item>\n                        <el-form-item label=\"店铺 ID\">\n                            <span>{{ props.row.id }}</span>\n                        </el-form-item>\n                        <el-form-item label=\"联系电话\">\n                            <span>{{ props.row.phone }}</span>\n                        </el-form-item>\n                        <el-form-item label=\"评分\">\n                            <span>{{ props.row.rating }}</span>\n                        </el-form-item>\n                        <el-form-item label=\"销售量\">\n                            <span>{{ props.row.recent_order_num }}</span>\n                        </el-form-item>\n                        <el-form-item label=\"分类\">\n                            <span>{{ props.row.category }}</span>\n                        </el-form-item>\n                    </el-form>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"店铺名称\" prop=\"name\" </el-table-column>\n            <el-table-column label=\"店铺地址\" prop=\"address\"></el-table-column>\n            <el-table-column label=\"店铺介绍\" prop=\"description\"></el-table-column>\n            <el-table-column label=\"操作\" width=\"400\" class=\"font\">\n                <template slot-scope=\"scope\">\n                    <el-button size=\"mini\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n                    <el-button size=\"mini\" type=\"Success\" @click=\"addFood(scope.$index, scope.row)\">添加食品</el-button>\n                    <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n        <div class=\"Pagination\">\n            <el-pagination\n                @size-change=\"handleSizeChange\"\n                @current-change=\"handleCurrentChange\"\n                :current-page=\"currentPage\"\n                :page-size=\"20\"\n                layout=\"total, prev, pager, next\"\n                :total=\"count\">\n            </el-pagination>\n        </div>\n        <el-dialog title=\"修改店铺信息\" :visible.sync=\"dialogFormVisible\">\n            <el-form :model=\"selectTable\">\n                <el-form-item label=\"店铺名称\" label-width=\"100px\">\n                    <el-input v-model=\"selectTable.name\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"详细地址\" label-width=\"100px\">\n                    <el-autocomplete\n                        v-model=\"address.address\"\n                        :fetch-suggestions=\"querySearchAsync\"\n                        placeholder=\"请输入地址\"\n                        style=\"width: 100%;\"\n                        @select=\"addressSelect\"\n                    ></el-autocomplete>\n                    <span>当前城市：{{city.name}}</span>\n                </el-form-item>\n                <el-form-item label=\"店铺介绍\" label-width=\"100px\">\n                    <el-input v-model=\"selectTable.description\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"联系电话\" label-width=\"100px\">\n                    <el-input v-model=\"selectTable.phone\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"店铺分类\" label-width=\"100px\">\n                    <el-cascader\n                        :options=\"categoryOptions\"\n                        v-model=\"selectedCategory\"\n                        change-on-select\n                    ></el-cascader>\n                </el-form-item>\n                <el-form-item label=\"商铺图片\" label-width=\"100px\">\n                    <el-upload\n                        class=\"avatar-uploader\"\n                        :show-file-list=\"false\"\n                        :on-success=\"handleServiceAvatarScucess\"\n                        :before-upload=\"beforeAvatarUpload\">\n                        <img v-if=\"selectTable.image_path\" :src=\"baseImgPath + selectTable.image_path\" class=\"avatar\">\n                        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n                    </el-upload>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"updateShop\">确 定</el-button>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n<script>\nexport default {\n    name: 'shoplist',\n    data(){\n        return{\n            // baseUrl,\n            // baseImgPath,\n            city: {},\n            offset: 0,\n            limit: 20,\n            count: 0,\n            tableData: [],\n            currentPage: 1,\n            selectTable: {},\n            dialogFormVisible: false,\n            categoryOptions: [],\n            selectedCategory: [],\n            address: {},\n        }\n    },\n    created(){\n        this.getshoplist();\n    },\n    methods:{\n        // 更新商家列表\n        async updateShop(){\n            this.dialogFormVisible = false;\n            try{\n                Object.assign(this.selectTable, this.address);\n                this.selectTable.category = this.selectedCategory.join('/');\n                const res = await updateResturant(this.selectTable)\n                if (res.status == 1) {\n                    this.$message({\n                        type: 'success',\n                        message: '更新店铺信息成功'\n                    });\n                    this.getResturants();\n                }else{\n                    this.$message({\n                        type: 'error',\n                        message: res.message\n                    });\n                }\n            }catch(err){\n                console.log('更新餐馆信息失败', err);\n            }\n        },\n        // 图片上传服务\n        handleServiceAvatarScucess(res, file) {\n            if (res.status == 1) {\n                this.selectTable.image_path = res.image_path;\n            }else{\n                this.$message.error('上传图片失败！');\n            }\n        },\n        // 图片上传之前\n        beforeAvatarUpload(file) {\n            const isRightType = (file.type === 'image/jpeg') || (file.type === 'image/png');\n            const isLt2M = file.size / 1024 / 1024 < 2;\n\n            if (!isRightType) {\n                this.$message.error('上传头像图片只能是 JPG 格式!');\n            }\n            if (!isLt2M) {\n                this.$message.error('上传头像图片大小不能超过 2MB!');\n            }\n            return isRightType && isLt2M;\n        },\n        // 地址选择:点击选中建议项时触发\n        addressSelect(vale){\n            const {address, latitude, longitude} = vale;\n            this.address = {address, latitude, longitude};\n        },\n        // 异步查询\n        async querySearchAsync(queryString, cb) {\n                if (queryString) {\n                    try{\n                        const cityList = await searchplace(this.city.id, queryString);\n                        if (cityList instanceof Array) {\n                            cityList.map(item => {\n                                item.value = item.address;\n                                return item;\n                            })\n                            cb(cityList)\n                        }\n                    }catch(err){\n                        console.log(err)\n                    }\n                }\n            },\n        handleSizeChange(val) {\n            console.log(`每页 ${val} 条`);\n        },\n        handleCurrentChange(val) {\n            console.log(1)\n        },\n        handleEdit(index, row) {\n            this.dialogFormVisible=true;\n            console.log(index)\n        },\n        addFood(index, row){\n            console.log(index,row)\n\n        },\n        // 删除商家\n        handleDelete(index, row){\n            this.$confirm(\"确认删除？\")\n            .then(result =>{\n                let id=this.tableData[index].id;\n                var q=this.deleteResturnant(id);\n                if(q == false){\n                    this.$message({\n                        type: 'success',\n                        message: '删除店铺成功',\n                    });\n                    this.tableData.splice(index, 1) //通过下标删除页面上的数据\n                }else{\n                    alert(\"失败\")\n                }\n            })\n            .catch(err=>{console.log(err)})\n        },\n        // 获取商家列表 api\n        getshoplist(){\n            this.$http.get(\"http://localhost:3000/shoplist\")\n                .then(res=>{\n                    // console.log(res.data);\n                    this.tableData=res.data\n                })\n        },\n        // 删除商家 api\n        deleteResturnant(id){\n            this.$axios({\n                method:\"delete\",\n                url:`http://localhost:3000/shoplist/${id}`,\n            }).then(res=>{\n                // console.log(res)\n            }).catch(err=>{\n                console.log(err)\n            })\n            return false;\n        }\n    }\n}\n</script>\n<style scoped>\n    .demo-table-expand {\n        font-size: 0;\n    }\n    .demo-table-expand label {\n        width: 90px;\n        color: #99a9bf;\n    }\n    .demo-table-expand .el-form-item {\n        margin-right: 0;\n        margin-bottom: 0;\n        width: 50%;\n    }\n    .table_container{\n        padding: 20px;\n    }\n    .Pagination{\n        display: flex;\n        justify-content: flex-start;\n        margin-top: 8px;\n    }\n    .avatar-uploader .el-upload {\n        border: 1px dashed #d9d9d9;\n        border-radius: 6px;\n        cursor: pointer;\n        position: relative;\n        overflow: hidden;\n    }\n    .avatar-uploader .el-upload:hover {\n        border-color: #20a0ff;\n    }\n    .avatar-uploader-icon {\n        font-size: 28px;\n        color: #8c939d;\n        width: 120px;\n        height: 120px;\n        line-height: 120px;\n        text-align: center;\n    }\n    .avatar {\n        width: 120px;\n        height: 120px;\n        display: block;\n    }\n</style>\n"],"sourceRoot":"src/components/page"}]}